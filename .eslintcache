[{"C:\\Users\\semne\\Documents\\ProjectsReact\\spotify\\src\\index.js":"1","C:\\Users\\semne\\Documents\\ProjectsReact\\spotify\\src\\App.js":"2","C:\\Users\\semne\\Documents\\ProjectsReact\\spotify\\src\\pages\\Main\\index.js":"3","C:\\Users\\semne\\Documents\\ProjectsReact\\spotify\\src\\components\\Header.js":"4","C:\\Users\\semne\\Documents\\ProjectsReact\\spotify\\src\\services\\api.js":"5","C:\\Users\\semne\\Documents\\ProjectsReact\\spotify\\src\\pages\\Location\\index.js":"6","C:\\Users\\semne\\Documents\\ProjectsReact\\spotify\\src\\pages\\Character\\index.js":"7","C:\\Users\\semne\\Documents\\ProjectsReact\\spotify\\src\\pages\\SpecificLocation\\index.js":"8"},{"size":150,"mtime":1610830911828,"results":"9","hashOfConfig":"10"},{"size":636,"mtime":1610986014152,"results":"11","hashOfConfig":"10"},{"size":1435,"mtime":1610987850966,"results":"12","hashOfConfig":"10"},{"size":343,"mtime":1611066770603,"results":"13","hashOfConfig":"10"},{"size":120,"mtime":1610833150722,"results":"14","hashOfConfig":"10"},{"size":1099,"mtime":1610987436299,"results":"15","hashOfConfig":"10"},{"size":1108,"mtime":1611068079639,"results":"16","hashOfConfig":"10"},{"size":1356,"mtime":1610993954794,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"18iexnh",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"20"},"C:\\Users\\semne\\Documents\\ProjectsReact\\spotify\\src\\index.js",[],["38","39"],"C:\\Users\\semne\\Documents\\ProjectsReact\\spotify\\src\\App.js",["40"],"import { Route, Link, BrowserRouter as Router } from 'react-router-dom';\n\nimport './App.css';\n\nimport Main from './pages/Main';\nimport Location from './pages/Location';\nimport Character from './pages/Character';\nimport SpecificLocation from './pages/SpecificLocation';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Route exact path=\"/\" component={Main} />\n        <Route exact path=\"/location\" component={Location} />\n        <Route path=\"/character/:id\" component={Character} />\n        <Route path=\"/location/:id\" component={SpecificLocation} />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\semne\\Documents\\ProjectsReact\\spotify\\src\\pages\\Main\\index.js",["41","42","43"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport Header from '../../components/Header';\r\n\r\nimport api from '../../services/api';\r\nimport './index.css';\r\n\r\nexport default function Main() {\r\n  const [character, setCharacter] = useState([]);\r\n  const [statusColor, setStatusColor] = useState('#000');\r\n\r\n  useEffect(() => {\r\n    async function getCharacter() {\r\n      const resposne = await api.get(\"https://rickandmortyapi.com/api/character\");\r\n      setCharacter(resposne.data);\r\n    }\r\n\r\n    getCharacter();\r\n  }, [])\r\n\r\n  console.log(character.results);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"main-container\">\r\n\r\n        <div className=\"list-container\">\r\n          {character.results && (character.results.map(info => {\r\n            return (\r\n              <div className=\"character-info\" key={info.id} >\r\n                <img src={info.image} alt=\"image\" />\r\n                <div className=\"info\">\r\n                  <a href={`/character/${info.id}`}>{info.name}</a>\r\n                  <p>{info.gender} - {info.status} </p>\r\n                  <p>Specie: {info.species} </p>\r\n\r\n                  <div className=\"localization\">\r\n                    <span>Last known locatilazion</span>\r\n                    <p>At ep 480 Going back to Earth</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )\r\n          }))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\n","C:\\Users\\semne\\Documents\\ProjectsReact\\spotify\\src\\components\\Header.js",[],"C:\\Users\\semne\\Documents\\ProjectsReact\\spotify\\src\\services\\api.js",[],"C:\\Users\\semne\\Documents\\ProjectsReact\\spotify\\src\\pages\\Location\\index.js",[],"C:\\Users\\semne\\Documents\\ProjectsReact\\spotify\\src\\pages\\Character\\index.js",["44"],"C:\\Users\\semne\\Documents\\ProjectsReact\\spotify\\src\\pages\\SpecificLocation\\index.js",["45","46","47","48"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport Header from '../../components/Header';\r\nimport api from '../../services/api';\r\nimport './index.css';\r\n\r\nexport default function SpecificLocation(props) {\r\n  const [location, setLocation] = useState();\r\n  const [residents, setResidents] = useState([]);\r\n  const [res, setRes] = useState([]);\r\n\r\n  // const [id, setId] = useState(props.match.params.id);\r\n  const id = props.match.params.id;\r\n  useEffect(() => {\r\n    async function getLocation() {\r\n      const response = await api.get(`https://rickandmortyapi.com/api/location/${id}`);\r\n      setLocation(response.data);\r\n    }\r\n    getLocation();\r\n\r\n    // async function getResidents() {\r\n    //   location.residents && (\r\n    //     location.residents.map(resident => {\r\n    //       const response = api.get(resident);\r\n    //       setResidents(response.data);\r\n    //     })\r\n    //   )\r\n    // }\r\n    // getResidents();\r\n\r\n  }, []);\r\n\r\nconsole.log(residents)\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"specific-location-container\">\r\n        {location && (\r\n          <div className=\"location\">\r\n            <h1>{location.name}</h1>\r\n            <p>Type:{location.type}</p>\r\n            <p>Dimension: {location.dimension}</p>\r\n            <h2>Residents</h2>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}",{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":1,"column":17,"nodeType":"55","messageId":"56","endLine":1,"endColumn":21},{"ruleId":"53","severity":1,"message":"57","line":10,"column":10,"nodeType":"55","messageId":"56","endLine":10,"endColumn":21},{"ruleId":"53","severity":1,"message":"58","line":10,"column":23,"nodeType":"55","messageId":"56","endLine":10,"endColumn":37},{"ruleId":"59","severity":1,"message":"60","line":32,"column":17,"nodeType":"61","endLine":32,"endColumn":53},{"ruleId":"62","severity":1,"message":"63","line":17,"column":6,"nodeType":"64","endLine":17,"endColumn":8,"suggestions":"65"},{"ruleId":"53","severity":1,"message":"66","line":9,"column":21,"nodeType":"55","messageId":"56","endLine":9,"endColumn":33},{"ruleId":"53","severity":1,"message":"67","line":10,"column":10,"nodeType":"55","messageId":"56","endLine":10,"endColumn":13},{"ruleId":"53","severity":1,"message":"68","line":10,"column":15,"nodeType":"55","messageId":"56","endLine":10,"endColumn":21},{"ruleId":"62","severity":1,"message":"63","line":31,"column":6,"nodeType":"64","endLine":31,"endColumn":8,"suggestions":"69"},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'statusColor' is assigned a value but never used.","'setStatusColor' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["72"],"'setResidents' is assigned a value but never used.","'res' is assigned a value but never used.","'setRes' is assigned a value but never used.",["73"],"no-global-assign","no-unsafe-negation",{"desc":"74","fix":"75"},{"desc":"74","fix":"76"},"Update the dependencies array to be: [id]",{"range":"77","text":"78"},{"range":"79","text":"78"},[517,519],"[id]",[946,948]]